name: "Base Workflow"

env:
  NODE_OPTIONS: "--max_old_space_size=4096"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths-ignore:
      - 'LICENSE*'
      - '.gitignore'
      - '**.md'
      - '**.adoc'
      - '*.txt'

jobs:
  java:
    name: "Java Solver"
    concurrency:
      group: pull_request-${{ github.event_name }}-${{ github.head_ref }}-${{ matrix.os }}-${{ matrix.java-version }}
      cancel-in-progress: true
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04-arm, macos-latest, windows-latest ]
        java-version: [ 21 ] # Latest LTS if not Ubuntu
        include:
          - os: ubuntu-latest
            java-version: 17
          - os: ubuntu-24.04-arm
            java-version: 17
          - os: ubuntu-latest
            java-version: 24
          - os: ubuntu-24.04-arm
            java-version: 24
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and test timefold-solver
        run: mvn -B verify

      - name: Test Summary
        uses: test-summary/action@2920bc1b1b377c787227b204af6981e8f41bbef3
        with:
          paths: "**/TEST-*.xml"
          show: "fail"
        if: always()
  java_full:
    name: "Java Solver (with flag -Dfull)"
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and test timefold-solver using flag -Dfull
        run: mvn -Dfull -B verify

      - name: Test Summary
        uses: test-summary/action@2920bc1b1b377c787227b204af6981e8f41bbef3
        with:
          paths: "**/TEST-*.xml"
          show: "fail"
        if: always()

  spring_boot_3_3_x:
    name: "Spring Boot 3.3.x"
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 21 # Latest LTS if not Ubuntu
          distribution: 'temurin'
          cache: 'maven'
      - name: Set release latest 3.3.x version
        run: |
          SPRING_VERSION="$(curl -s 'https://search.maven.org/solrsearch/select?q=g:org.springframework.boot+AND+a:spring-boot-starter+AND+v:3.3.*' | jq -r '.response.docs[0].v')"
          mvn versions:set-property -Dproperty=version.org.springframework.boot -DnewVersion=$SPRING_VERSION
      - name: Quickly build timefold-solver
        run: mvn -B -Dquickly clean install
      - name: Test Spring Boot 3.3.x
        run: |
          cd spring-integration
          mvn -B verify
      - name: Test Summary
        uses: test-summary/action@2920bc1b1b377c787227b204af6981e8f41bbef3
        with:
          paths: "**/TEST-*.xml"
          show: "fail"
        if: always()
  spring_boot_3_4_x:
    name: "Spring Boot 3.4.x"
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 21 # Latest LTS if not Ubuntu
          distribution: 'temurin'
          cache: 'maven'
      - name: Set release latest 3.4.x version
        run: |
          SPRING_VERSION="$(curl -s 'https://search.maven.org/solrsearch/select?q=g:org.springframework.boot+AND+a:spring-boot-starter+AND+v:3.4.*' | jq -r '.response.docs[0].v')"
          mvn versions:set-property -Dproperty=version.org.springframework.boot -DnewVersion=$SPRING_VERSION
      - name: Quickly build timefold-solver
        run: mvn -B -Dquickly clean install
      - name: Test Spring Boot 3.4.x
        run: |
          cd spring-integration
          mvn -B verify
      - name: Test Summary
        uses: test-summary/action@2920bc1b1b377c787227b204af6981e8f41bbef3
        with:
          paths: "**/TEST-*.xml"
          show: "fail"
        if: always()

  native:
    name: "Native Image"
    concurrency:
      group: pull_request_native-${{ github.event_name }}-${{ github.head_ref }}-${{matrix.os}}-${{ matrix.module }}-${{ matrix.java-version }}
      cancel-in-progress: true
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04-arm ] # Windows doesn't work, Mac is not a deploy OS.
        module: ["spring-integration", "quarkus-integration"]
        java-version: [ 17, 21, 24 ] # LTS + latest.
        exclude:
          # Quarkus 3.17.2 has weird issues with Java 17 GraalVM,
          # with Java 21+ GraalVM being recommended even for
          # Java 17 projects.
          # https://github.com/quarkusio/quarkus/issues/44877
          - module: "quarkus-integration"
            java-version: 17
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4

      - uses: graalvm/setup-graalvm@7f488cf82a3629ee755e4e97342c01d6bed318fa # v1
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      - name: Quickly build timefold-solver
        run: mvn -B -Dquickly clean install

      - name: Test timefold-solver in Native mode
        run: |
          cd ${{matrix.module}}
          mvn -B -Dnative verify

      - name: Test Summary
        uses: test-summary/action@2920bc1b1b377c787227b204af6981e8f41bbef3
        with:
          paths: "**/TEST-*.xml"
          show: "fail"
        if: always()
