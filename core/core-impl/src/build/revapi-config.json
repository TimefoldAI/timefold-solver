{
  "filters": {
    "revapi": {
      "filter": {
        "elements": {
          "exclude": [
            "method .* ai\\.timefold\\.solver\\.core\\.config.*::(?!(set|get)).*",
            "parameter .* ai\\.timefold\\.solver\\.core\\.config.*::(?!(set|get)).*"
          ]
        }
      },
      "java": {
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, since we already check them in their own module.",
            "regex": true,
            "include": [
              "ai\\.timefold\\.solver\\.core\\.api.*",
              "ai\\.timefold\\.solver\\.core\\.config.*"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 0.9.38 and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultC_> ai.timefold.solver.core.api.score.stream.tri.TriConstraintStream<A, B, ResultC_> ai.timefold.solver.core.api.score.stream.bi.BiConstraintStream<A, B>::expand(java.util.function.BiFunction<A, B, ResultC_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.quad.QuadConstraintStream<A, B, ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.bi.BiConstraintStream<A, B>::expand(java.util.function.BiFunction<A, B, ResultC_>, java.util.function.BiFunction<A, B, ResultD_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_, ResultC_> ai.timefold.solver.core.api.score.stream.tri.TriConstraintStream<ResultA_, ResultB_, ResultC_> ai.timefold.solver.core.api.score.stream.bi.BiConstraintStream<A, B>::map(java.util.function.BiFunction<A, B, ResultA_>, java.util.function.BiFunction<A, B, ResultB_>, java.util.function.BiFunction<A, B, ResultC_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_, ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.quad.QuadConstraintStream<ResultA_, ResultB_, ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.bi.BiConstraintStream<A, B>::map(java.util.function.BiFunction<A, B, ResultA_>, java.util.function.BiFunction<A, B, ResultB_>, java.util.function.BiFunction<A, B, ResultC_>, java.util.function.BiFunction<A, B, ResultD_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_> ai.timefold.solver.core.api.score.stream.bi.BiConstraintStream<ResultA_, ResultB_> ai.timefold.solver.core.api.score.stream.bi.BiConstraintStream<A, B>::map(java.util.function.BiFunction<A, B, ResultA_>, java.util.function.BiFunction<A, B, ResultB_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_, ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.quad.QuadConstraintStream<ResultA_, ResultB_, ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.quad.QuadConstraintStream<A, B, C, D>::map(ai.timefold.solver.core.api.function.QuadFunction<A, B, C, D, ResultA_>, ai.timefold.solver.core.api.function.QuadFunction<A, B, C, D, ResultB_>, ai.timefold.solver.core.api.function.QuadFunction<A, B, C, D, ResultC_>, ai.timefold.solver.core.api.function.QuadFunction<A, B, C, D, ResultD_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_> ai.timefold.solver.core.api.score.stream.bi.BiConstraintStream<ResultA_, ResultB_> ai.timefold.solver.core.api.score.stream.quad.QuadConstraintStream<A, B, C, D>::map(ai.timefold.solver.core.api.function.QuadFunction<A, B, C, D, ResultA_>, ai.timefold.solver.core.api.function.QuadFunction<A, B, C, D, ResultB_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_, ResultC_> ai.timefold.solver.core.api.score.stream.tri.TriConstraintStream<ResultA_, ResultB_, ResultC_> ai.timefold.solver.core.api.score.stream.quad.QuadConstraintStream<A, B, C, D>::map(ai.timefold.solver.core.api.function.QuadFunction<A, B, C, D, ResultA_>, ai.timefold.solver.core.api.function.QuadFunction<A, B, C, D, ResultB_>, ai.timefold.solver.core.api.function.QuadFunction<A, B, C, D, ResultC_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultD_> ai.timefold.solver.core.api.score.stream.quad.QuadConstraintStream<A, B, C, ResultD_> ai.timefold.solver.core.api.score.stream.tri.TriConstraintStream<A, B, C>::expand(ai.timefold.solver.core.api.function.TriFunction<A, B, C, ResultD_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_> ai.timefold.solver.core.api.score.stream.bi.BiConstraintStream<ResultA_, ResultB_> ai.timefold.solver.core.api.score.stream.tri.TriConstraintStream<A, B, C>::map(ai.timefold.solver.core.api.function.TriFunction<A, B, C, ResultA_>, ai.timefold.solver.core.api.function.TriFunction<A, B, C, ResultB_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_, ResultC_> ai.timefold.solver.core.api.score.stream.tri.TriConstraintStream<ResultA_, ResultB_, ResultC_> ai.timefold.solver.core.api.score.stream.tri.TriConstraintStream<A, B, C>::map(ai.timefold.solver.core.api.function.TriFunction<A, B, C, ResultA_>, ai.timefold.solver.core.api.function.TriFunction<A, B, C, ResultB_>, ai.timefold.solver.core.api.function.TriFunction<A, B, C, ResultC_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_, ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.quad.QuadConstraintStream<ResultA_, ResultB_, ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.tri.TriConstraintStream<A, B, C>::map(ai.timefold.solver.core.api.function.TriFunction<A, B, C, ResultA_>, ai.timefold.solver.core.api.function.TriFunction<A, B, C, ResultB_>, ai.timefold.solver.core.api.function.TriFunction<A, B, C, ResultC_>, ai.timefold.solver.core.api.function.TriFunction<A, B, C, ResultD_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultB_> ai.timefold.solver.core.api.score.stream.bi.BiConstraintStream<A, ResultB_> ai.timefold.solver.core.api.score.stream.uni.UniConstraintStream<A>::expand(java.util.function.Function<A, ResultB_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultB_, ResultC_> ai.timefold.solver.core.api.score.stream.tri.TriConstraintStream<A, ResultB_, ResultC_> ai.timefold.solver.core.api.score.stream.uni.UniConstraintStream<A>::expand(java.util.function.Function<A, ResultB_>, java.util.function.Function<A, ResultC_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultB_, ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.quad.QuadConstraintStream<A, ResultB_, ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.uni.UniConstraintStream<A>::expand(java.util.function.Function<A, ResultB_>, java.util.function.Function<A, ResultC_>, java.util.function.Function<A, ResultD_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_, ResultC_> ai.timefold.solver.core.api.score.stream.tri.TriConstraintStream<ResultA_, ResultB_, ResultC_> ai.timefold.solver.core.api.score.stream.uni.UniConstraintStream<A>::map(java.util.function.Function<A, ResultA_>, java.util.function.Function<A, ResultB_>, java.util.function.Function<A, ResultC_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_> ai.timefold.solver.core.api.score.stream.bi.BiConstraintStream<ResultA_, ResultB_> ai.timefold.solver.core.api.score.stream.uni.UniConstraintStream<A>::map(java.util.function.Function<A, ResultA_>, java.util.function.Function<A, ResultB_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_, ResultB_, ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.quad.QuadConstraintStream<ResultA_, ResultB_, ResultC_, ResultD_> ai.timefold.solver.core.api.score.stream.uni.UniConstraintStream<A>::map(java.util.function.Function<A, ResultA_>, java.util.function.Function<A, ResultB_>, java.util.function.Function<A, ResultC_>, java.util.function.Function<A, ResultD_>)",
          "justification": "Constraint Streams get new map() overloads and an expand() functionality."
        }
      ]
    }
  }
}
